plugins {
    id 'maven-publish' apply false
    id 'com.google.cloud.artifactregistry.gradle-plugin' apply false
}

interface GcpArtifactRegistryExtension {
    Property<Boolean> getEnabled()
    Property<String> getLocation()
    Property<String> getGcpProjectId()
    Property<String> getRepoName()
}

def cfg = project.extensions.create('publishToGcpArtifactRegistry', GcpArtifactRegistryExtension)
cfg.enabled.convention(false)
cfg.location.convention(null)
cfg.gcpProjectId.convention(null)
cfg.repoName.convention(null)

afterEvaluate {
    if (cfg.enabled.getOrElse(false)) {
        def (location, gcpProjectId, repoName) = [
                cfg.location.getOrNull(),
                cfg.gcpProjectId.getOrNull(),
                cfg.repoName.getOrNull()
        ]
        if (!location || !gcpProjectId || !repoName) {
            throw new GradleException('location, projectId and repositoryName values must be set to ' +
                    'publish to GCP Artifact Registry')
        }

        project.plugins.apply 'maven-publish'
        project.plugins.apply 'com.google.cloud.artifactregistry.gradle-plugin'

        java {
            withJavadocJar()
            withSourcesJar()
        }

        publishing {
            publications {
                gcpAr(MavenPublication) {
                    from components.java
                }
            }

            repositories {
                maven {
                    url "artifactregistry://$location-maven.pkg.dev/$gcpProjectId/$repoName"
                }
            }
        }
    }
}
